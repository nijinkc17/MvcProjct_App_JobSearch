//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcProjct_App
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCProjectEntities : DbContext
    {
        public MVCProjectEntities()
            : base("name=MVCProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyReg> CompanyRegs { get; set; }
        public virtual DbSet<LoginTab> LoginTabs { get; set; }
        public virtual DbSet<UserReg> UserRegs { get; set; }
        public virtual DbSet<Job_tab> Job_tab { get; set; }
        public virtual DbSet<ApplyJob_tab> ApplyJob_tab { get; set; }
    
        public virtual int sp_adminReg(Nullable<int> cid, string cna, string caddr, string cphone, string cemail, string clocation)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var clocationParameter = clocation != null ?
                new ObjectParameter("clocation", clocation) :
                new ObjectParameter("clocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adminReg", cidParameter, cnaParameter, caddrParameter, cphoneParameter, cemailParameter, clocationParameter);
        }
    
        public virtual int sp_logInsert(Nullable<int> rid, string una, string pw, string utype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_logInsert", ridParameter, unaParameter, pwParameter, utypeParameter);
        }
    
        public virtual int sp_userReg(Nullable<int> uid, string una, Nullable<int> uag, string uaddr, string uphone, string uemail, string uqual, string uexp, string uskill, string uphoto, string uresume)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var uagParameter = uag.HasValue ?
                new ObjectParameter("uag", uag) :
                new ObjectParameter("uag", typeof(int));
    
            var uaddrParameter = uaddr != null ?
                new ObjectParameter("uaddr", uaddr) :
                new ObjectParameter("uaddr", typeof(string));
    
            var uphoneParameter = uphone != null ?
                new ObjectParameter("uphone", uphone) :
                new ObjectParameter("uphone", typeof(string));
    
            var uemailParameter = uemail != null ?
                new ObjectParameter("uemail", uemail) :
                new ObjectParameter("uemail", typeof(string));
    
            var uqualParameter = uqual != null ?
                new ObjectParameter("uqual", uqual) :
                new ObjectParameter("uqual", typeof(string));
    
            var uexpParameter = uexp != null ?
                new ObjectParameter("uexp", uexp) :
                new ObjectParameter("uexp", typeof(string));
    
            var uskillParameter = uskill != null ?
                new ObjectParameter("uskill", uskill) :
                new ObjectParameter("uskill", typeof(string));
    
            var uphotoParameter = uphoto != null ?
                new ObjectParameter("uphoto", uphoto) :
                new ObjectParameter("uphoto", typeof(string));
    
            var uresumeParameter = uresume != null ?
                new ObjectParameter("uresume", uresume) :
                new ObjectParameter("uresume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userReg", uidParameter, unaParameter, uagParameter, uaddrParameter, uphoneParameter, uemailParameter, uqualParameter, uexpParameter, uskillParameter, uphotoParameter, uresumeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_login(string una, string pwd, ObjectParameter status)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", unaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual int sp_jobInsert(Nullable<int> cid, string title, string expce, string skill, Nullable<int> noVacy, Nullable<System.DateTime> date, Nullable<int> status)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var expceParameter = expce != null ?
                new ObjectParameter("expce", expce) :
                new ObjectParameter("expce", typeof(string));
    
            var skillParameter = skill != null ?
                new ObjectParameter("skill", skill) :
                new ObjectParameter("skill", typeof(string));
    
            var noVacyParameter = noVacy.HasValue ?
                new ObjectParameter("NoVacy", noVacy) :
                new ObjectParameter("NoVacy", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobInsert", cidParameter, titleParameter, expceParameter, skillParameter, noVacyParameter, dateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_SelectAlljobs_Result> sp_SelectAlljobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAlljobs_Result>("sp_SelectAlljobs");
        }
    
        public virtual int sp_UpdateJob(Nullable<int> j_id, string title, string experience, string skill, Nullable<int> no_vacancy, Nullable<System.DateTime> date, Nullable<int> status)
        {
            var j_idParameter = j_id.HasValue ?
                new ObjectParameter("J_id", j_id) :
                new ObjectParameter("J_id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var skillParameter = skill != null ?
                new ObjectParameter("skill", skill) :
                new ObjectParameter("skill", typeof(string));
    
            var no_vacancyParameter = no_vacancy.HasValue ?
                new ObjectParameter("No_vacancy", no_vacancy) :
                new ObjectParameter("No_vacancy", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateJob", j_idParameter, titleParameter, experienceParameter, skillParameter, no_vacancyParameter, dateParameter, statusParameter);
        }
    
        public virtual int sp_deleteJob(Nullable<int> j_id)
        {
            var j_idParameter = j_id.HasValue ?
                new ObjectParameter("J_id", j_id) :
                new ObjectParameter("J_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteJob", j_idParameter);
        }
    
        public virtual int sp_jobSearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobSearch", qryParameter);
        }
    
        public virtual int sp_InsertJobApplication(Nullable<int> user_id, Nullable<int> job_id, string resume, Nullable<System.DateTime> application_date, string status)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(int));
    
            var job_idParameter = job_id.HasValue ?
                new ObjectParameter("Job_id", job_id) :
                new ObjectParameter("Job_id", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            var application_dateParameter = application_date.HasValue ?
                new ObjectParameter("Application_date", application_date) :
                new ObjectParameter("Application_date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertJobApplication", user_idParameter, job_idParameter, resumeParameter, application_dateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_selectAllAppliedJob_Result> sp_selectAllAppliedJob()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectAllAppliedJob_Result>("sp_selectAllAppliedJob");
        }
    }
}
